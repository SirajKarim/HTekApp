{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\HTekApp\\\\screens\\\\SignUp.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { firebase } from \"../src/firebase/config\";\nexport default function RegistrationForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Password don't match. \");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n      return navigation.navigate('Home');\n    }).then(function () {\n      var uid = firebase.auth().currentUser.uid;\n      var data = {\n        userid: uid,\n        useremail: email\n      };\n      var userref = firebase.firestore().collection('users');\n      userref.doc(uid).set(data);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"SIGNUP\"), React.createElement(View, {\n    style: styles.innercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Email\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Repeat Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.appButtonContainer,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"SignUp\"))), React.createElement(Text, {\n    style: styles.signupDire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Already a member ?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.tot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \" Login Here\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#242945',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    color: 'white',\n    fontSize: 40,\n    fontFamily: 'Roboto',\n    marginBottom: 100\n  },\n  innercontainer: {\n    width: '80%',\n    height: '57%',\n    backgroundColor: 'white',\n    borderWidth: 5,\n    borderColor: 'lightgrey',\n    borderRadius: 10,\n    borderBottomWidth: 15\n  },\n  signupDire: {\n    color: 'white',\n    marginTop: 10\n  },\n  tot: {\n    color: 'orange'\n  },\n  txtBox: {\n    height: 40,\n    borderColor: '#242945',\n    borderWidth: 2,\n    borderRadius: 3,\n    margin: '5%',\n    backgroundColor: '#242945',\n    color: 'white',\n    textAlign: 'center'\n  },\n  appButtonText: {\n    fontSize: 14,\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  appButtonContainer: {\n    margin: '5%',\n    width: '90%',\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 5,\n    paddingVertical: 8,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"sources":["F:/HTekApp/screens/SignUp.js"],"names":["React","useEffect","useState","firebase","RegistrationForm","navigation","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","navigate","uid","currentUser","data","userid","useremail","userref","firestore","collection","doc","set","catch","error","console","log","styles","container","heading","innercontainer","txtBox","text","appButtonContainer","appButtonText","signupDire","tot","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontFamily","marginBottom","width","height","borderWidth","borderColor","borderRadius","borderBottomWidth","marginTop","margin","textAlign","fontWeight","alignSelf","textTransform","elevation","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, Button, Alert  } from 'react-native';\r\nimport {firebase} from '../src/firebase/config';\r\n\r\nexport default function RegistrationForm({navigation}) {\r\n    // const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n   \r\n    \r\n    const onRegisterPress = () => {\r\n        if(password !== confirmPassword){\r\n            alert(\"Password don't match. \")\r\n            return\r\n        }\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .then(() => navigation.navigate('Home'))\r\n            .then(() => {\r\n                const uid = firebase.auth().currentUser.uid\r\n                const data = {\r\n                    userid: uid,\r\n                    useremail: email\r\n                };\r\n                const userref  = firebase.firestore().collection('users')\r\n                userref\r\n                    .doc(uid)\r\n                    .set(data)\r\n            })\r\n            .catch(error => console.log(error))\r\n            // .then((response) => {\r\n            //     const uid = response.user.uid\r\n            //     const data = {\r\n            //         id: uid,\r\n            //         email,\r\n            //         // fullName,\r\n            //     };\r\n            //     const usersRef = firebase.firestore().collection('users')\r\n\r\n            //     usersRef\r\n            //         .doc(uid)\r\n            //         .set(data)\r\n            //         .then(() => {\r\n                        \r\n            //             // navigation.navigate(\"Login\", {user: data})\r\n            //         })\r\n            //         .catch((error) => {\r\n            //             alert(error)\r\n            //         });\r\n            // })\r\n            // .catch((error) =>{\r\n            //     alert(error)\r\n            // });\r\n    }\r\nreturn (\r\n    <View style={styles.container}>\r\n    <Text style = {styles.heading}>SIGNUP</Text>\r\n    <View style = {styles.innercontainer}>\r\n    <TextInput \r\n      style = {styles.txtBox}\r\n      placeholder = \"Email\"\r\n      placeholderTextColor=\"white\"\r\n      onChangeText={(text) => setEmail(text)}\r\n      value={email}\r\n      />\r\n    <TextInput \r\n    style = {styles.txtBox}  \r\n    placeholder = \"Password\" \r\n    placeholderTextColor=\"white\"   \r\n    secureTextEntry = {true}  \r\n    onChangeText={(text) => setPassword(text)}\r\n    value={password}\r\n    />\r\n    <TextInput \r\n    style = {styles.txtBox} \r\n    placeholder = \"Repeat Password\" \r\n    placeholderTextColor=\"white\"  \r\n    secureTextEntry = {true}   \r\n    onChangeText={(text) => setConfirmPassword(text)}\r\n    value={confirmPassword}\r\n    />\r\n    <TouchableOpacity style={styles.appButtonContainer}  onPress={() => onRegisterPress()}>\r\n        <Text style={styles.appButtonText}>SignUp</Text>\r\n    </TouchableOpacity>\r\n    </View>\r\n    <Text style = {styles.signupDire} >Already a member ?\r\n       \r\n    </Text>\r\n    <TouchableOpacity  onPress = {() => navigation.navigate('Login')}>\r\n        <Text style = {styles.tot}> Login Here</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n    flex: 1,\r\n    backgroundColor: '#242945',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n},\r\nheading: {\r\n    color:'white',\r\n    // fontWeight: 'bold',\r\n    fontSize: 40,\r\n    fontFamily:'Roboto',\r\n    marginBottom: 100\r\n},\r\ninnercontainer: {\r\nwidth:'80%',\r\nheight:'57%',\r\nbackgroundColor: 'white',\r\nborderWidth: 5,\r\nborderColor: 'lightgrey',\r\nborderRadius: 10,\r\nborderBottomWidth:15,\r\n\r\n},\r\nsignupDire:{\r\n    color: 'white',\r\n    marginTop: 10\r\n},\r\ntot:{\r\n    color: 'orange'\r\n},\r\ntxtBox:{\r\n    height: 40,\r\n    borderColor: '#242945',\r\n    borderWidth: 2 ,\r\n    borderRadius: 3,\r\n    margin: '5%',\r\n    backgroundColor: '#242945',\r\n    color: 'white',\r\n    textAlign: 'center'\r\n},\r\nappButtonText: {\r\n    fontSize: 14,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\"\r\n},\r\nappButtonContainer: {\r\n    margin: '5%',\r\n    width:'90%',\r\n    elevation: 8,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 5,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10\r\n},\r\n\r\n});"]},"metadata":{},"sourceType":"module"}