{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\NativeApplications\\\\humantekappone\\\\components\\\\toggleButton.js\";\n\nimport * as React from 'react';\nimport { ToggleButton } from 'react-native-paper';\n\nvar ToggleBtn = function ToggleBtn() {\n  var _React$useState = React.useState('left'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(ToggleButton.Row, {\n    onValueChange: function onValueChange(value) {\n      return setValue(value);\n    },\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(ToggleButton, {\n    style: {\n      width: '50%'\n    },\n    icon: \"close\",\n    value: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(ToggleButton, {\n    style: {\n      width: '50%'\n    },\n    icon: \"check\",\n    value: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ToggleBtn;","map":{"version":3,"sources":["F:/NativeApplications/humantekappone/components/toggleButton.js"],"names":["React","ToggleButton","ToggleBtn","useState","value","setValue","width"],"mappings":";;;;;AA8BA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,wBACIF,KAAK,CAACG,QAAN,CAAe,MAAf,CADJ;AAAA;AAAA,MACfC,KADe;AAAA,MACRC,QADQ;;AAGtB,SACE,oBAAC,YAAD,CAAc,GAAd;AAAmB,IAAA,aAAa,EAAE,uBAAAD,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAAvC;AAA4D,IAAA,KAAK,EAAEA,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAI;AAACE,MAAAA,KAAK,EAAE;AAAR,KAAvB;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAoD,IAAA,KAAK,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAI;AAACA,MAAAA,KAAK,EAAE;AAAR,KAAvB;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAoD,IAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CATD;;AAWA,eAAeJ,SAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { View, Switch, StyleSheet } from \"react-native\";\r\n\r\n// const ToggleBtn = () => {\r\n//   const [isEnabled, setIsEnabled] = useState(false);\r\n//   const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Switch\r\n//         trackColor={{ false: \"#767577\", true: \"#f5dd4b\" }}\r\n//         thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n//         ios_backgroundColor=\"#3e3e3e\"\r\n//         onValueChange={toggleSwitch}\r\n//         value={isEnabled}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom:10\r\n//   }\r\n// });\r\n\r\n// export default ToggleBtn;\r\n\r\nimport * as React from 'react';\r\nimport { ToggleButton } from 'react-native-paper';\r\n\r\nconst ToggleBtn = () => {\r\n  const [value, setValue] = React.useState('left');\r\n\r\n  return (\r\n    <ToggleButton.Row  onValueChange={value => setValue(value)} value={value}>\r\n      <ToggleButton style = {{width: '50%'}} icon=\"close\" value=\"left\" />\r\n      <ToggleButton style = {{width: '50%'}} icon=\"check\" value=\"right\" />\r\n    </ToggleButton.Row>\r\n  );\r\n};\r\n\r\nexport default ToggleBtn;"]},"metadata":{},"sourceType":"module"}