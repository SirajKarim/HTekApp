{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\NativeApplications\\\\humantekappone\\\\components\\\\toggleButton.js\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ToggleButton } from 'react-native-paper';\n\nvar ToggleBtn = function ToggleBtn() {\n  var _React$useState = React.useState('checked'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var onButtonToggle = function onButtonToggle(value) {\n    setStatus(status === 'checked' ? 'unchecked' : 'checked');\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(ToggleButton, {\n    icon: \"bluetooth\",\n    value: \"bluetooth\",\n    status: status,\n    onPress: onButtonToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(ToggleButton, {\n    icon: \"bluetooth\",\n    value: \"bluetooth\",\n    status: status,\n    onPress: onButtonToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ToggleBtn;","map":{"version":3,"sources":["F:/NativeApplications/humantekappone/components/toggleButton.js"],"names":["React","ToggleButton","ToggleBtn","useState","status","setStatus","onButtonToggle","value"],"mappings":";;;;;AA8BA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,wBACMF,KAAK,CAACG,QAAN,CAAe,SAAf,CADN;AAAA;AAAA,MACfC,MADe;AAAA,MACPC,SADO;;AAGtB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9BF,IAAAA,SAAS,CAACD,MAAM,KAAK,SAAX,GAAuB,WAAvB,GAAqC,SAAtC,CAAT;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACA,IAAA,IAAI,EAAC,WADL;AAEA,IAAA,KAAK,EAAC,WAFN;AAGA,IAAA,MAAM,EAAEA,MAHR;AAIA,IAAA,OAAO,EAAEE,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOA,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,MAAM,EAAEF,MAHV;AAIE,IAAA,OAAO,EAAEE,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADF;AAgBD,CAvBD;;AAyBA,eAAeJ,SAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { View, Switch, StyleSheet } from \"react-native\";\r\n\r\n// const ToggleBtn = () => {\r\n//   const [isEnabled, setIsEnabled] = useState(false);\r\n//   const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Switch\r\n//         trackColor={{ false: \"#767577\", true: \"#f5dd4b\" }}\r\n//         thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n//         ios_backgroundColor=\"#3e3e3e\"\r\n//         onValueChange={toggleSwitch}\r\n//         value={isEnabled}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"flex-end\",\r\n//     marginBottom:10\r\n//   }\r\n// });\r\n\r\n// export default ToggleBtn;\r\n\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport { ToggleButton } from 'react-native-paper';\r\n\r\nconst ToggleBtn = () => {\r\n  const [status, setStatus] = React.useState('checked');\r\n\r\n  const onButtonToggle = value => {\r\n    setStatus(status === 'checked' ? 'unchecked' : 'checked');\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <ToggleButton\r\n      icon=\"bluetooth\"\r\n      value=\"bluetooth\"\r\n      status={status}\r\n      onPress={onButtonToggle}\r\n    />\r\n    <ToggleButton\r\n      icon=\"bluetooth\"\r\n      value=\"bluetooth\"\r\n      status={status}\r\n      onPress={onButtonToggle}\r\n    />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ToggleBtn;"]},"metadata":{},"sourceType":"module"}