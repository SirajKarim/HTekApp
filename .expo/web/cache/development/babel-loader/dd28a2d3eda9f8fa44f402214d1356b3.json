{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"F:\\\\HTekApp\\\\screens\\\\loginscreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegistrationForm from \"./SignUp\";\nimport { firebase } from \"../src/firebase/config\";\nexport default function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uid = _useState6[0],\n      setUid = _useState6[1];\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password);\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      setUid = (_readOnlyError(\"setUid\"), uid);\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert(\"User does not exist anymore.\");\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        console.log(uid);\n        navigation.navigate('Home', {\n          user: user\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"), React.createElement(View, {\n    style: styles.innercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Email\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.appButtonContainer,\n    onPress: function onPress() {\n      return onLoginPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Login\"))), React.createElement(Text, {\n    style: styles.signupDire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Not a member ?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.tot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \" Register Here\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#242945',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    color: 'white',\n    fontSize: 40,\n    fontFamily: 'Roboto',\n    marginBottom: 100\n  },\n  innercontainer: {\n    width: '80%',\n    height: '40%',\n    backgroundColor: 'white',\n    borderWidth: 5,\n    borderColor: 'lightgrey',\n    borderRadius: 10,\n    borderBottomWidth: 15\n  },\n  signupDire: {\n    color: 'white',\n    marginTop: 10\n  },\n  tot: {\n    color: 'orange'\n  },\n  txtBox: {\n    height: 40,\n    borderColor: '#242945',\n    borderWidth: 2,\n    borderRadius: 3,\n    margin: '4%',\n    backgroundColor: '#242945',\n    color: 'white',\n    textAlign: 'center'\n  },\n  appButtonText: {\n    fontSize: 14,\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  appButtonContainer: {\n    margin: '5%',\n    width: '90%',\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 5,\n    paddingVertical: 8,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"sources":["F:/HTekApp/screens/loginscreen.js"],"names":["React","useState","NavigationContainer","createStackNavigator","RegistrationForm","firebase","LoginForm","navigation","email","setEmail","password","setPassword","uid","setUid","onLoginPress","auth","signInWithEmailAndPassword","then","response","user","usersRef","firestore","collection","doc","get","firestoreDocument","exists","alert","data","console","log","navigate","catch","error","Platform","OS","styles","container","heading","innercontainer","txtBox","text","appButtonContainer","appButtonText","signupDire","tot","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontFamily","marginBottom","width","height","borderWidth","borderColor","borderRadius","borderBottomWidth","marginTop","margin","textAlign","fontWeight","alignSelf","textTransform","elevation","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, Button,KeyboardAvoidingView,Platform  } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport RegistrationForm  from \"./SignUp\";\r\nimport { firebase } from '../src/firebase/config'\r\n\r\nexport default function LoginForm({navigation}) {\r\n\r\n     const [email, setEmail] = useState('')\r\n     const [password, setPassword] = useState('')\r\n     const [uid, setUid] = useState(0)\r\n\r\n     const onLoginPress = () => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const usersRef = firebase.firestore().collection('users')\r\n                setUid = uid\r\n                usersRef\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then(firestoreDocument => {\r\n                        if (!firestoreDocument.exists) {\r\n                            alert(\"User does not exist anymore.\")\r\n                            return;\r\n                        }\r\n                        const user = firestoreDocument.data()\r\n                        console.log(uid)\r\n                        navigation.navigate('Home', {user})\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView   behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.container}>\r\n        {/* <View style={styles.container}> */}\r\n        <Text style = {styles.heading}>LOGIN</Text>\r\n        <View style = {styles.innercontainer}>\r\n        <TextInput \r\n        style = {styles.txtBox}  \r\n        placeholder = \"Email\"  \r\n        placeholderTextColor=\"white\" \r\n        onChangeText={(text) => setEmail(text)}\r\n        value={email}\r\n        />\r\n\r\n        <TextInput \r\n        style = {styles.txtBox} \r\n        placeholder = \"Password\" \r\n        placeholderTextColor=\"white\"  \r\n        secureTextEntry = {true} \r\n        onChangeText={(text) => setPassword(text)}\r\n        value={password}\r\n        />\r\n\r\n        <TouchableOpacity style={styles.appButtonContainer} onPress={() => onLoginPress()}>\r\n            <Text style={styles.appButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n        <Text style = {styles.signupDire} >Not a member ?\r\n           \r\n        </Text>\r\n        <TouchableOpacity onPress = {() => navigation.navigate('SignUp')}>\r\n            <Text style = {styles.tot}> Register Here</Text>\r\n            </TouchableOpacity>\r\n        {/* </View> */}\r\n        </KeyboardAvoidingView>\r\n\r\n    );\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#242945',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    heading: {\r\n        color:'white',\r\n        // fontWeight: 'bold',\r\n        fontSize: 40,\r\n        fontFamily:'Roboto',\r\n        marginBottom: 100\r\n    },\r\n    innercontainer: {\r\n    width:'80%',\r\n    height:'40%',\r\n    backgroundColor: 'white',\r\n    borderWidth: 5,\r\n    borderColor: 'lightgrey',\r\n    borderRadius: 10,\r\n    borderBottomWidth:15,\r\n    \r\n    },\r\n    signupDire:{\r\n        color: 'white',\r\n        marginTop: 10\r\n    },\r\n    tot:{\r\n        color: 'orange',\r\n       \r\n    },\r\n    txtBox:{\r\n        height: 40,\r\n        borderColor: '#242945',\r\n        borderWidth: 2 ,\r\n        borderRadius: 3,\r\n        margin: '4%',\r\n        backgroundColor: '#242945',\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    },\r\n    appButtonText: {\r\n        fontSize: 14,\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    },\r\n    appButtonContainer: {\r\n        margin: '5%',\r\n        width:'90%',\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 5,\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 10\r\n    },\r\n    \r\n    });\r\n"]},"metadata":{},"sourceType":"module"}