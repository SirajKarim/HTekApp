{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\HTekApp\\\\screens\\\\controlscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Card, Title, Paragraph, TextInput, RadioButton } from 'react-native-paper';\nimport SwitchBtn from \"../components/switch\";\nimport ValSlider from \"../components/slider\";\nimport Dimmer from \"../components/dimmer\";\nimport { MaterialIcons } from '@expo/vector-icons';\n\nvar ControlScreen = function (_Component) {\n  _inherits(ControlScreen, _Component);\n\n  var _super = _createSuper(ControlScreen);\n\n  function ControlScreen() {\n    var _this;\n\n    _classCallCheck(this, ControlScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: false\n    };\n\n    _this.handleAddButton = function () {\n      console.log(\"Item added buttoin has been clicked\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ControlScreen, [{\n    key: \"toggleModal\",\n    value: function toggleModal(visible) {\n      this.setState({\n        modalVisible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.mybg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {\n          console.log(\"Modal has been closed.\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      }, React.createElement(View, {\n        style: styles.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        style: styles.myheading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }\n      }, \"BUTTON EDITOR\"), React.createElement(View, {\n        style: {\n          width: 300,\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }\n      }, React.createElement(TextInput, {\n        label: \"Status Off\",\n        placeholder: \"Light Off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 300,\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }\n      }, React.createElement(TextInput, {\n        label: \"Hexadecimal Code\",\n        placeholder: \"012 235 110 11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 300,\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }\n      }, React.createElement(TextInput, {\n        label: \"Status On\",\n        placeholder: \"Light On\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 300,\n          height: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, React.createElement(TextInput, {\n        label: \"Hexadecimal Code\",\n        placeholder: \"012 235 110 11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.toggleModal(!_this2.state.modalVisible);\n        },\n        style: {\n          marginLeft: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }\n      }, \"Close\")), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.toggleModal(!_this2.state.modalVisible);\n        },\n        style: {\n          marginLeft: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }\n      }, \"Save\"))))), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.tile,\n        onLongPress: function onLongPress() {\n          _this2.toggleModal(true);\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.myheading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"Switch 1\"), React.createElement(SwitchBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableHighlight, {\n        style: styles.tile,\n        onLongPress: function onLongPress() {\n          _this2.toggleModal(true);\n        },\n        underlayColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }\n      }, React.createElement(Text, {\n        style: styles.myheading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }\n      }, \"Switch 1\"), React.createElement(SwitchBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 26\n        }\n      })))), React.createElement(Button, {\n        title: \"Add Switch\",\n        style: styles.AddButton,\n        onPress: this.handleAddButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ControlScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  mybg: {\n    backgroundColor: '#dfe5f0',\n    flex: 1\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 100\n  },\n  container: {\n    flex: 0.185,\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  tile: {\n    height: '80%',\n    width: '45%',\n    backgroundColor: 'lightblue',\n    justifyContent: 'center',\n    marginTop: '4%'\n  },\n  rgbtile: {\n    height: '100%',\n    width: '92%',\n    backgroundColor: 'lightblue',\n    justifyContent: 'center',\n    marginTop: '4%'\n  },\n  sldr: {\n    alignItems: 'center'\n  },\n  myheading: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flexWrap: 'wrap',\n    textAlign: 'center'\n  },\n  AddButton: {}\n});\nexport default ControlScreen;","map":{"version":3,"sources":["F:/HTekApp/screens/controlscreen.js"],"names":["React","Component","Card","Title","Paragraph","TextInput","RadioButton","SwitchBtn","ValSlider","Dimmer","MaterialIcons","ControlScreen","state","modalVisible","handleAddButton","console","log","visible","setState","styles","mybg","modal","myheading","width","height","flexDirection","toggleModal","marginLeft","fontWeight","container","tile","AddButton","StyleSheet","create","backgroundColor","flex","alignItems","padding","flexWrap","justifyContent","marginTop","rgbtile","sldr","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport { StyleSheet,View,Text,TouchableHighlight,Modal,Button } from 'react-native';\r\nimport { Card,Title,Paragraph,TextInput,RadioButton   } from 'react-native-paper';\r\nimport SwitchBtn from '../components/switch';\r\nimport ValSlider from '../components/slider'\r\nimport Dimmer from '../components/dimmer';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nclass ControlScreen extends Component{\r\n    state = {\r\n        modalVisible: false,\r\n     }\r\n     toggleModal(visible) {\r\n        this.setState({ modalVisible: visible });\r\n     }\r\n\r\n     handleAddButton = () =>{\r\n         console.log(\"Item added buttoin has been clicked\")\r\n     }\r\n    render(){\r\n        return (\r\n            <View style = {styles.mybg} >\r\n\r\n             <Modal animationType = {\"slide\"} transparent = {false}\r\n               visible = {this.state.modalVisible}\r\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\r\n               \r\n               <View style = {styles.modal}>\r\n               <Text style = {styles.myheading}>BUTTON EDITOR</Text>\r\n               <View style = {{width: 300, height: 70}}>\r\n               <TextInput\r\n                label=\"Status Off\"\r\n                placeholder = \"Light Off\"\r\n                />\r\n               </View>\r\n               <View style = {{width: 300, height: 70}}>\r\n               <TextInput\r\n                label=\"Hexadecimal Code\"\r\n                placeholder = \"012 235 110 11\"\r\n                />\r\n               </View>\r\n               <View style = {{width: 300, height: 70}}>\r\n               <TextInput\r\n                label=\"Status On\"\r\n                placeholder = \"Light On\"\r\n                />\r\n               </View>\r\n           \r\n             \r\n               <View style = {{width: 300, height: 70}}>\r\n               <TextInput\r\n                 label=\"Hexadecimal Code\"\r\n                placeholder = \"012 235 110 11\"\r\n                />\r\n               </View>\r\n              <View style = {{flexDirection: \"row\"}}>\r\n              <TouchableHighlight onPress = {() => {\r\n                     this.toggleModal(!this.state.modalVisible)}}\r\n                     style = {{marginLeft: 150}}\r\n                     >\r\n                     \r\n                     <Text style = {{fontWeight: \"bold\"}}>Close</Text>\r\n               </TouchableHighlight>\r\n               <TouchableHighlight onPress = {() => {\r\n                     this.toggleModal(!this.state.modalVisible)}}\r\n                     style = {{marginLeft: 50}}\r\n                     >\r\n                     \r\n                     <Text style = {{fontWeight:\"bold\"}}>Save</Text>\r\n                </TouchableHighlight>\r\n              </View>\r\n                 \r\n                      {/* <Button title = \"Delete\" style = {{marginLeft: 300}}/>\r\n                      \r\n                      <Button title = \"Close\" />\r\n                      <Button title = \"Open\" /> */}\r\n                      \r\n                     \r\n               \r\n               </View>\r\n            </Modal>\r\n               \r\n                <View style = {styles.container}>\r\n                   <TouchableHighlight style={styles.tile} onLongPress = {() => {this.toggleModal(true)}}  underlayColor = \"white\">\r\n                     \r\n                    <View >\r\n                        <Text style = {styles.myheading}>Switch 1</Text>\r\n                        <SwitchBtn />\r\n                    </View>\r\n                   </TouchableHighlight>\r\n                   <TouchableHighlight style={styles.tile} onLongPress = {() => {this.toggleModal(true)}}  underlayColor = \"white\">\r\n                     \r\n                     <View >\r\n                         <Text style = {styles.myheading}>Switch 1</Text>\r\n                         <SwitchBtn />\r\n                     </View>\r\n                    </TouchableHighlight>\r\n                 \r\n                </View>\r\n              \r\n                <Button title = \"Add Switch\" style = {styles.AddButton} onPress = {this.handleAddButton}/>\r\n             </View>\r\n\r\n               \r\n       );\r\n    }  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mybg: {\r\n        backgroundColor: '#dfe5f0',\r\n        flex : 1,\r\n    },\r\n    modal: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        padding: 100\r\n     },\r\n    container: {\r\n        flex: 0.185,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        // alignItems:'center',\r\n        justifyContent: 'space-evenly',\r\n        // backgroundColor:'grey'\r\n      \r\n\r\n        \r\n    },\r\n    tile: {\r\n        height: '80%',\r\n        width:'45%',\r\n        backgroundColor:'lightblue',\r\n        justifyContent: 'center',\r\n        marginTop: '4%'\r\n\r\n    },\r\n    rgbtile: {\r\n        height: '100%',\r\n        width:'92%',\r\n        backgroundColor:'lightblue',\r\n        justifyContent: 'center',\r\n        marginTop: '4%'\r\n\r\n    },\r\n    sldr: {\r\n       alignItems: 'center'\r\n\r\n    },\r\n    myheading: {\r\n        fontSize:18,\r\n        fontWeight: 'bold',\r\n        flexWrap: 'wrap',\r\n        textAlign: 'center'\r\n    },\r\n    AddButton: {\r\n        // marginTop: '995%'\r\n    }\r\n});\r\n\r\nexport default ControlScreen; "]},"metadata":{},"sourceType":"module"}