{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\HTekApp\\\\screens\\\\SignUp.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { firebase } from \"../src/firebase/config\";\nexport default function RegistrationForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== repeatPassword) {\n      Alert.alert(\"Incorrect Password\", \"Repeat Password doesnot match with Password\", [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          return console.log(\"Pressed\");\n        }\n      }]);\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email\n      };\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate(\"Home\", {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"SIGNUP\"), React.createElement(View, {\n    style: styles.innercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Email\",\n    placeholderTextColor: \"white\",\n    onChange: function onChange(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: true,\n    onChange: function onChange(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.txtBox,\n    placeholder: \"Repeat Password\",\n    placeholderTextColor: \"white\",\n    secureTextEntry: true,\n    onChange: function onChange(text) {\n      return setConfirmPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.appButtonContainer,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.appButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"SignUp\"))), React.createElement(Text, {\n    style: styles.signupDire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Already a member ?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.tot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" Login Here\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#242945',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    color: 'white',\n    fontSize: 40,\n    fontFamily: 'Roboto',\n    marginBottom: 100\n  },\n  innercontainer: {\n    width: '80%',\n    height: '57%',\n    backgroundColor: 'white',\n    borderWidth: 5,\n    borderColor: 'lightgrey',\n    borderRadius: 10,\n    borderBottomWidth: 15\n  },\n  signupDire: {\n    color: 'white',\n    marginTop: 10\n  },\n  tot: {\n    color: 'orange'\n  },\n  txtBox: {\n    height: 40,\n    borderColor: '#242945',\n    borderWidth: 2,\n    borderRadius: 3,\n    margin: '5%',\n    backgroundColor: '#242945',\n    color: 'white',\n    textAlign: 'center'\n  },\n  appButtonText: {\n    fontSize: 14,\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  appButtonContainer: {\n    margin: '5%',\n    width: '90%',\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 5,\n    paddingVertical: 8,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"sources":["F:/HTekApp/screens/SignUp.js"],"names":["React","useEffect","useState","firebase","RegistrationForm","navigation","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onRegisterPress","repeatPassword","Alert","alert","text","onPress","console","log","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","navigate","catch","error","styles","container","heading","innercontainer","txtBox","appButtonContainer","appButtonText","signupDire","tot","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontFamily","marginBottom","width","height","borderWidth","borderColor","borderRadius","borderBottomWidth","marginTop","margin","textAlign","fontWeight","alignSelf","textTransform","elevation","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, Button, Alert  } from 'react-native';\r\nimport {firebase} from '../src/firebase/config';\r\n\r\nexport default function RegistrationForm({navigation}) {\r\n    // const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n   \r\n    const onRegisterPress = () => {\r\n        if(password !== repeatPassword){\r\n            Alert.alert(\r\n                \"Incorrect Password\",\r\n                \"Repeat Password doesnot match with Password\",\r\n                [\r\n                    {\r\n                        text: \"Ok\",\r\n                        onPress: () => console.log(\"Pressed\")\r\n                    }\r\n                ]\r\n            )\r\n            return\r\n        }\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const data = {\r\n                    id: uid,\r\n                    email,\r\n                    \r\n                };\r\n                const usersRef = firebase.firestore().collection('users')\r\n\r\n                usersRef\r\n                    .doc(uid)\r\n                    .set(data)\r\n                    .then(() => {\r\n                        navigation.navigate(\"Home\", {user: data})\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch((error) =>{\r\n                alert(error)\r\n            });\r\n    }\r\n\r\nreturn (\r\n    <View style={styles.container}>\r\n    <Text style = {styles.heading}>SIGNUP</Text>\r\n    <View style = {styles.innercontainer}>\r\n    <TextInput style = {styles.txtBox} placeholder = \"Email\" placeholderTextColor=\"white\"  onChange = {(text) => setEmail(text)}/>\r\n    <TextInput style = {styles.txtBox}  placeholder = \"Password\" placeholderTextColor=\"white\"   secureTextEntry = {true}  onChange = {(text) => setPassword(text)}/>\r\n    <TextInput style = {styles.txtBox}  placeholder = \"Repeat Password\" placeholderTextColor=\"white\"  secureTextEntry = {true}   onChange = {(text) => setConfirmPassword(text)}/>\r\n    <TouchableOpacity style={styles.appButtonContainer}  onPress={() => onRegisterPress()}>\r\n        <Text style={styles.appButtonText}>SignUp</Text>\r\n    </TouchableOpacity>\r\n    </View>\r\n    <Text style = {styles.signupDire} >Already a member ?\r\n       \r\n    </Text>\r\n    <TouchableOpacity  onPress = {() => navigation.navigate('Login')}>\r\n        <Text style = {styles.tot}> Login Here</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n    flex: 1,\r\n    backgroundColor: '#242945',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n},\r\nheading: {\r\n    color:'white',\r\n    // fontWeight: 'bold',\r\n    fontSize: 40,\r\n    fontFamily:'Roboto',\r\n    marginBottom: 100\r\n},\r\ninnercontainer: {\r\nwidth:'80%',\r\nheight:'57%',\r\nbackgroundColor: 'white',\r\nborderWidth: 5,\r\nborderColor: 'lightgrey',\r\nborderRadius: 10,\r\nborderBottomWidth:15,\r\n\r\n},\r\nsignupDire:{\r\n    color: 'white',\r\n    marginTop: 10\r\n},\r\ntot:{\r\n    color: 'orange'\r\n},\r\ntxtBox:{\r\n    height: 40,\r\n    borderColor: '#242945',\r\n    borderWidth: 2 ,\r\n    borderRadius: 3,\r\n    margin: '5%',\r\n    backgroundColor: '#242945',\r\n    color: 'white',\r\n    textAlign: 'center'\r\n},\r\nappButtonText: {\r\n    fontSize: 14,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\"\r\n},\r\nappButtonContainer: {\r\n    margin: '5%',\r\n    width:'90%',\r\n    elevation: 8,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 5,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10\r\n},\r\n\r\n});"]},"metadata":{},"sourceType":"module"}